<div class="text-center calc_div">
  <h1>会計処理ページ</h1>
  <div style="border-top:1px dotted #c0c0c0"></div>
  <p>カメラからJANコード読み込んでください</p>
</div >

<!--カメラ-->
<div id="interactive" class="viewport" height="100"></div>

<p class="clac-number">小計:</p>

<!-- 会計小計エリア-->
<table class="table calc-table">
 <tr>
  <td width=17%><p>JAN:</p></td>
  <td width="60%;"><input type="number" class="form-control select" id="phone-number" /></td>
  <td><input type="button" id="add-button" class="btn btn-primary btn-block" value="追加" onClick="addTableItem()"/></td>
  </tr>
</table> 


<div class="text-center">
  <label>
    <%= link_to "清算する",clear_moneys_path,remote:true, class:"btn btn-lg" ,style:"background:#2C7CFF;color:#fff;margin-left:5%;" %>
  </label>
<div>
<div style="border-top:2px dotted #d0d0d0;"></div>


      
<table class="table table-bordered item-table">
  <thead>
    <tr>
      <th width="60%;">商品名</th>
      <th>価格</th>
      <th>取り消し</th>
    </tr>
  </thead>  
  <tbody id="tbody">
  </tbody>
 </table>
   
<script>
 
  var number = document.getElementById('phone-number');
  var btn = document.getElementById('add-button');
  var tbody = document.getElementById('tbody');
  
  Quagga.init({
  inputStream: {
    name: 'Live',
    type: 'LiveStream',
    target: document.querySelector('#interactive'),//埋め込んだdivのID
    constraints: {
      facingMode: 'environment',
    },
    area: {//必要ならバーコードの読み取り範囲を調整できる（この場合は、上30%/下30%は読み取りしない）
      top: "30%",
      right: "0%",
      left: "0%",
      bottom: "30%"
    },
  },
  locator: {
    patchSize: 'medium',
    halfSample: true,
  },
  numOfWorkers: 2,
  decoder: {
    readers: ['ean_reader']//ISBNは基本的にこれ（他にも種類あり）
  },
  locate: true,
}, (err) => {
  if(!err) {
    Quagga.start();
    // alert("started");
  }
})

Quagga.onDetected(success => {
  const code = success.codeResult.code;
  if(calc(code)) {
	  alert(code);
      number.value = code;
  }
})

const calc = isbn => {
  const arrIsbn = isbn
    .toString()
    .split("")
    .map(num => parseInt(num));
  let remainder = 0;
  const checkDigit = arrIsbn.pop();

  arrIsbn.forEach((num, index) => {
    remainder += num * (index % 2 === 0 ? 1 : 3);
  });
  remainder %= 10;
  remainder = remainder === 0 ? 0 : 10 - remainder;

  return checkDigit === remainder;
}
function addTableItem() {
    if(number.value == "") return;
    $.ajax({
          url: 'http://localhost:3000/sends/'+number.value,
          type: 'GET',
          dataType:'json',
        }).done(function(res){
          console.log(res);
         var tr = document.createElement('tr');

         var td = document.createElement('td');
         td.textContent=res.name;
         var td2 = document.createElement('td');
         td2.textContent = res.baika;
         td2.style.color = "red";

         var td3 = document.createElement('td');
         var deletebtn = document.createElement('button');
         deletebtn.textContent = "削除";
         deletebtn.className = "btn btn-danger";
         td3.appendChild(deletebtn);

         tr.appendChild(td);
         tr.appendChild(td2);
         tr.appendChild(td3);
         tbody.appendChild(tr);
      });
    

}
</script>




<style>
 video{height:100px;width:100%;}
 canvas{display:none;}
</style>